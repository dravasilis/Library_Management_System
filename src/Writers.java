 
import java.sql.*;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
 
public class Writers extends javax.swing.JPanel {

    /**
     * Creates new form Books
     */
    public Writers() {
        initComponents();
        loadData();
        mylist();
        createLog();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        query1 = new javax.swing.JButton();
        cboption = new javax.swing.JComboBox<>();
        bookcb = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        result1Table = new javax.swing.JTable();
        query2 = new javax.swing.JButton();
        countrycb = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        result2Table = new javax.swing.JTable();
        logFile = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 63, 30));
        setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jTable1.setBackground(new java.awt.Color(204, 204, 255));
        jTable1.setFont(new java.awt.Font("Dubai", 2, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Writer Id", "First Name", "Last Name", "Year Born", "Country"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setFocusable(false);
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTable1.setMaximumSize(new java.awt.Dimension(2147483647, 200));
        jTable1.setMinimumSize(new java.awt.Dimension(45, 80));
        jTable1.setPreferredSize(new java.awt.Dimension(400, 402));
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel1.setBackground(new java.awt.Color(0, 28, 0));
        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("WRITERS DATA");
        jLabel1.setMaximumSize(new java.awt.Dimension(156, 29));
        jLabel1.setMinimumSize(new java.awt.Dimension(156, 29));
        jLabel1.setPreferredSize(new java.awt.Dimension(156, 29));

        add.setBackground(new java.awt.Color(0, 0, 153));
        add.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("Add a Writer");
        add.setPreferredSize(new java.awt.Dimension(143, 30));
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(0, 0, 153));
        update.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Update a Writer");
        update.setPreferredSize(new java.awt.Dimension(143, 30));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(0, 0, 153));
        delete.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete a Writer");
        delete.setPreferredSize(new java.awt.Dimension(143, 30));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("jLabel2");
        jLabel2.setMaximumSize(new java.awt.Dimension(0, 0));
        jLabel2.setMinimumSize(new java.awt.Dimension(0, 0));
        jLabel2.setPreferredSize(new java.awt.Dimension(0, 0));

        jLabel3.setFont(new java.awt.Font("Dubai Light", 3, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Select Query");

        query1.setFont(new java.awt.Font("Century Gothic", 3, 12)); // NOI18N
        query1.setText("Εμφάνισε  τον συγγραφέα που έχει  γράψει ένα συγκεκριμένο βιβλίο");
        query1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                query1ActionPerformed(evt);
            }
        });

        cboption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboptionActionPerformed(evt);
            }
        });

        bookcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookcbActionPerformed(evt);
            }
        });

        result1Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(result1Table);

        query2.setFont(new java.awt.Font("Century Gothic", 3, 12)); // NOI18N
        query2.setText("Εμφάνισε τον συγγραφέα που είναι γεννημένος στην συγκεκριμένη χώρα");
        query2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                query2ActionPerformed(evt);
            }
        });

        countrycb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countrycbActionPerformed(evt);
            }
        });

        result2Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(result2Table);

        logFile.setFont(new java.awt.Font("Dubai Light", 3, 18)); // NOI18N
        logFile.setText("Log File");
        logFile.setMaximumSize(new java.awt.Dimension(136, 23));
        logFile.setMinimumSize(new java.awt.Dimension(136, 23));
        logFile.setPreferredSize(new java.awt.Dimension(136, 23));
        logFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logFileActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Operation", "Timestamp", "User Id", "Writer Id", "First Name", "Last Name", "Year Born", "Country"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable2);

        jButton1.setFont(new java.awt.Font("Dubai Light", 3, 14)); // NOI18N
        jButton1.setText("Hide Log File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(61, 61, 61)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(countrycb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bookcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel3)
                                    .addComponent(cboption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(query2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(query1))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(logFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 72, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboption, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(query1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(query2)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(countrycb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(logFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        Object[] options1 = { "Delete", "Cancel" };
        Object[] options2 = { "New Delete", "Cancel" };
        
        JPanel panel = new JPanel();
        panel.setBackground(new java.awt.Color(255, 255, 203));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        
        panel.add(new JLabel("Writer Id:"));
        JTextField WidtextField = new JTextField(10);
        panel.add(WidtextField);
        
        int result2 = JOptionPane.YES_OPTION;
        int result = JOptionPane.YES_OPTION;
        
        while(result2 == JOptionPane.YES_OPTION && result == JOptionPane.YES_OPTION){   //AN PATISW NEW SUBMIT NA KANEI EPANALIPSI
                result = JOptionPane.showOptionDialog(null, panel, "Delete a Writer",
                  JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                  options1, null);

              if (result == JOptionPane.YES_OPTION) {
                try{
                  //Pairnw tin timh
                  int wid = Integer.valueOf(WidtextField.getText());
                  //Kanw delete 
                  deleteWriter.setInt(1, wid);
                  //try{
                  ResultSet rsr=null;
                  rsr=deleteWriter.executeQuery();
                  //}catch(Exception ex){
                       // if(!ex.getMessage().equals("A result was returned when none was expected.")){
                      //       throw new Exception(ex);
                    //    }
                  //}
                  
                  int exists=0;
                  while(rsr.next()){
                    exists = rsr.getInt("deletewr");
                    System.out.println(exists);
                  }
                  JPanel panel2 = new JPanel();
                  panel2.setBackground(new java.awt.Color(255, 255, 203));
                  panel2.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

                  if(exists == 0) 
                    panel2.add(new JLabel("Writer not Found"));
                    
                else
                    panel2.add(new JLabel("Deleted Successfully"));

                  result2 = JOptionPane.showOptionDialog(null, panel2, "Delete a Member",
                      JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                          options2, null);
                  loadData(); //REFRESH
                  }catch(Exception ex){
                     JOptionPane.showMessageDialog(null, ex.getMessage(),"Delete a Writer Error",JOptionPane.INFORMATION_MESSAGE); 
                  }
                //ADEIAZW TA PEDIA SE PERIPTWSI POU PATISA NEW SUBMIT
                  WidtextField.setText("");
              }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        Object[] options1 = { "Submit", "Cancel" };
        Object[] options2 = { "Update", "Cancel" };
        Object[] options3 = { "New Update", "Cancel" }; 
        
        JPanel panel = new JPanel();
        panel.setBackground(new java.awt.Color(255, 255, 203));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        
        panel.add(new JLabel("Writer Id:"));
        JTextField WidtextField = new JTextField(10);
        panel.add(WidtextField);
        
        int result=JOptionPane.YES_OPTION;
        int result2=JOptionPane.YES_OPTION;
        int result3=JOptionPane.YES_OPTION;
        
        
        while(result3 == JOptionPane.YES_OPTION && result2 == JOptionPane.YES_OPTION && result == JOptionPane.YES_OPTION){   //AN PATISW NEW SUBMIT NA KANEI EPANALIPSI
          
                    result = JOptionPane.showOptionDialog(null, panel, "Update a Writer",
                        JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                            options1, null);

                try{

                    if (result == JOptionPane.YES_OPTION) {
                        //Pairnw tin timh
                        int wid = Integer.valueOf(WidtextField.getText());
                        updateWriter.setInt(5, wid);

                    JPanel panel2 = new JPanel();
                    panel2.setBackground(new java.awt.Color(255, 255, 203));
                    panel2.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

                     //1o textfield    
                     panel2.add(new JLabel("First Name:"));
                     JTextField FirstNametextField = new JTextField(10);
                     panel2.add(FirstNametextField);

                     //2o textfield
                     panel2.add(new JLabel("Last Name:"));
                     JTextField LastNametextField = new JTextField(10);
                     panel2.add(LastNametextField);

                     //3o textfield
                     panel2.add(new JLabel("Year Born:"));
                     JTextField YearBorntextField = new JTextField(10);
                     panel2.add(YearBorntextField);

                     //4o textfield
                     panel2.add(new JLabel("Country:"));
                     JTextField CountrytextField = new JTextField(10);
                     panel2.add(CountrytextField);

                     result2 = JOptionPane.showOptionDialog(null, panel2, "Update Writer",
                     JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                     options2, null);

                     if(result2 == JOptionPane.YES_OPTION){
                        try{
                            //Apothikevw tis arxikes times tou member pou thelw na kanw update
                            String selectString2 ="select * from getwriterwid(?)";//SELECT * FROM writer where wid= ?
                            preSelect =  dbConnection.prepareStatement(selectString2); 
                            preSelect.setInt(1, wid);
                            rs2 = preSelect.executeQuery();

                            while(rs2.next()){
                            String firstName0 = rs2.getString("f_name");
                            String lastName0 = rs2.getString("l_name");
                            int yearBorn0 = rs2.getInt("y_born");
                            String country0 = rs2.getString("w_country");

                            //Pairnw tis kainouries times
                            String firstName = FirstNametextField.getText();
                            if(firstName.equals(""))
                                firstName = firstName0;

                            String lastName = LastNametextField.getText();
                            if(lastName.equals(""))
                                lastName = lastName0;

                            String yearBorn =  YearBorntextField.getText();
                            if(yearBorn.equals(""))
                                yearBorn = String.valueOf(yearBorn0);

                            String country =  CountrytextField.getText() ;
                            if(country.equals(""))
                                country = String.valueOf(country0);

                            //Kanw update
                            updateWriter.setString(1,firstName);
                            updateWriter.setString(2, lastName);
                            updateWriter.setInt(3, Integer.valueOf(yearBorn));
                            updateWriter.setString(4, country);
                            //try{
                            //updateWriter.executeUpdate();
                            //}catch(Exception ex){
                              //  if(!ex.getMessage().equals("A result was returned when none was expected.")){
                                //    throw new Exception(ex);
                                //}
                            //}
                            }
                            boolean did = updateWriter.execute(); //kanw update kai tautoxrona pairnw ton arithmo twn updates pou ginane
                            JPanel panel3 = new JPanel();
                            panel3.setBackground(new java.awt.Color(255, 255, 203));
                            panel3.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

                            if(!did){
                                panel3.add(new JLabel("Writer not Found"));

                                result3 = JOptionPane.showOptionDialog(null, panel3, "Update a Writer",
                                JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                                    options3, null);
                            }

                            else{
                                panel3.add(new JLabel("Updated Successfully"));

                                result3 = JOptionPane.showOptionDialog(null, panel3, "Update a Writer",
                                JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                                    options3, null);
                                }
                            loadData(); //REFRESH 
                            }catch(Exception ex){
                                JOptionPane.showMessageDialog(null, "Writer not Found","Update a Writer Error",JOptionPane.INFORMATION_MESSAGE);
                                                }
                            //ADEIAZW TA PEDIA
                            WidtextField.setText("");
                            FirstNametextField.setText("");
                            LastNametextField.setText("");     
                            YearBorntextField.setText("");   
                            CountrytextField.setText("");   
                          }
                      }
                }catch(Exception ex){
                                JOptionPane.showMessageDialog(null, ex.getMessage(),"Update a Writer Error",JOptionPane.INFORMATION_MESSAGE);
                                                }
                
        }//TELOS WHILE
    }//GEN-LAST:event_updateActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        Object[] options1 = { "Submit", "Cancel" };
        Object[] options2 = { "New Submit", "Cancel" };
        
        JPanel panel = new JPanel();
        panel.setBackground(new java.awt.Color(255, 255, 203));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        
        //1o textfield
        panel.add(new JLabel("Writer Id:"));
        JTextField WidtextField = new JTextField(10);
        panel.add(WidtextField);
        
        //2o textfield
        panel.add(new JLabel("First Name:"));
        JTextField FirstNametextField = new JTextField(10);
        panel.add(FirstNametextField);
        
        //3o textfield
        panel.add(new JLabel("Last Name:"));
        JTextField LastNametextField = new JTextField(10);
        panel.add(LastNametextField);
        
        //4o textfield
        panel.add(new JLabel("Year Born:"));
        JTextField YearBorntextField = new JTextField(10);
        panel.add(YearBorntextField);
        
        //5o textfield
        panel.add(new JLabel("Country:"));
        JTextField CountrytextField = new JTextField(10);
        panel.add(CountrytextField);
        
        int result2 = JOptionPane.YES_OPTION;
        int result = JOptionPane.YES_OPTION;
        
        while(result2 == JOptionPane.YES_OPTION && result == JOptionPane.YES_OPTION){   //AN PATISW NEW SUBMIT NA KANEI EPANALIPSI
                result = JOptionPane.showOptionDialog(null, panel, "Add a Writer",
                  JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                  options1, null);

              if (result == JOptionPane.YES_OPTION) {
                  try{
                      //Pairnw tis times twn textfields
                      int wid = Integer.valueOf(WidtextField.getText());
                      String firstName = FirstNametextField.getText();
                      String lastName = LastNametextField.getText();
                      int yearBorn = Integer.valueOf(YearBorntextField.getText());
                      String country = CountrytextField.getText();
                      //Kanw insert 
                      insertWriter.setInt(1, wid);
                      insertWriter.setString(2, firstName);
                      insertWriter.setString(3, lastName);
                      insertWriter.setInt(4, yearBorn);
                      insertWriter.setString(5,country);
                      try{
                      insertWriter.executeUpdate();
                      }catch(Exception ex){
                        if(!ex.getMessage().equals("A result was returned when none was expected.")){
                            throw new Exception(ex);
                        }
                      }
                      JPanel panel2 = new JPanel();
                      panel2.setBackground(new java.awt.Color(255, 255, 203));
                      panel2.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

                      panel2.add(new JLabel("Submission Successful"));

                      result2 = JOptionPane.showOptionDialog(null, panel2, "Add a Writer",
                          JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                              options2, null);

                     
                  loadData(); //REFRESH
                  }catch(Exception ex){
                          JOptionPane.showMessageDialog(null, ex.getMessage(),"Insert a Writer Error",JOptionPane.INFORMATION_MESSAGE);
                      }
                      //ADEIAZW TA PEDIA SE PERIPTWSI POU PATISA NEW SUBMIT
                      WidtextField.setText("");
                      FirstNametextField.setText("");
                      LastNametextField.setText("");
                      YearBorntextField.setText("");
                      CountrytextField.setText("");
                }
        }//TELOS WHILE
    }//GEN-LAST:event_addActionPerformed

    private boolean clicked = true; //gia query 1  
    private boolean clicked2 = true; //gia query 2
    static PreparedStatement selectWriters = null;
    static PreparedStatement selectWriters2 = null;
    static ResultSet rs3 = null;
    private void query1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_query1ActionPerformed
        if(clicked)
        bookcb.setVisible(true);

        else{
            bookcb.setVisible(false);
            jScrollPane2.setVisible(false);
        }
        clicked = !clicked;
    }//GEN-LAST:event_query1ActionPerformed

    private void cboptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboptionActionPerformed

        if(String.valueOf(cboption.getSelectedItem()) == "Query 1"){
            query1.setVisible(true);
            query2.setVisible(false);
            countrycb.setVisible(false);
            jScrollPane3.setVisible(false);
            clicked = true;
        }
        else if(cboption.getSelectedItem() == "Query 2"){
            query2.setVisible(true);
            query1.setVisible(false);
            bookcb.setVisible(false);
            jScrollPane2.setVisible(false);
            clicked2 = true;
        }
        else{
            query1.setVisible(false);
            query2.setVisible(false);
            bookcb.setVisible(false);
            countrycb.setVisible(false);
            jScrollPane2.setVisible(false);
            jScrollPane3.setVisible(false);
        }
    }//GEN-LAST:event_cboptionActionPerformed

    private void bookcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookcbActionPerformed

        DefaultTableModel model = (DefaultTableModel) result1Table.getModel();
        model.setRowCount(0);

        String selectedBook = String.valueOf(bookcb.getSelectedItem());

        if(selectedBook.equals("Επίλεξε ένα βιβλίο"))
        jScrollPane2.setVisible(false);
        else{
            try {
                selectWriters.setString(1, selectedBook);
                rs3 = selectWriters.executeQuery();

                while(rs3.next()) {
                    String firstName = rs3.getString("f_name");
                    String lastName = rs3.getString("l_name");
                    Object[] row = { firstName, lastName};
                    model.addRow(row);
                }
                if(model.getRowCount() !=0){
                    jScrollPane2.setVisible(true);
                    
                }

                else if (model.getRowCount() == 0 && rs.isBeforeFirst()) {
                    JOptionPane.showMessageDialog(null, "no data","Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);
                    System.out.println("no data");
                }
            } catch(SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),"Query 1 Error",JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_bookcbActionPerformed

    private void query2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_query2ActionPerformed
        if(clicked2)
        countrycb.setVisible(true);

        else{
            countrycb.setVisible(false);
            jScrollPane3.setVisible(false);
        }
        clicked2 = !clicked2;
    }//GEN-LAST:event_query2ActionPerformed

    static ResultSet rs4 = null;
    private void countrycbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countrycbActionPerformed
        DefaultTableModel model2 = (DefaultTableModel) result2Table.getModel();
        model2.setRowCount(0);

        String selectedCountry = String.valueOf(countrycb.getSelectedItem());

        if(selectedCountry.equals("Επίλεξε μία χώρα"))
        jScrollPane3.setVisible(false);
        else{
            try {
                selectWriters2.setString(1, selectedCountry);
                rs4 = selectWriters2.executeQuery();

                while(rs4.next()) {
                    String firstName = rs4.getString("f_name");
                    String lastName = rs4.getString("l_name");
                    Object[] row = { firstName, lastName};
                    model2.addRow(row);
                }
                if(model2.getRowCount() !=0){
                    jScrollPane3.setVisible(true);
                   
                }

                else if (model2.getRowCount() == 0 && rs.isBeforeFirst()) {
                    JOptionPane.showMessageDialog(null, "no data","Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);
                    System.out.println("no data");
                }
            } catch(SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),"Delete a Writer Error",JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_countrycbActionPerformed

    private void logFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logFileActionPerformed
        jScrollPane4.setVisible(true);
        jButton1.setVisible(true);

    }//GEN-LAST:event_logFileActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jScrollPane4.setVisible(false);
        jButton1.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

     
    public static Connection dbConnection = null;
    static Statement statement = null;
    static PreparedStatement preSelect = null;
    static ResultSet rs = null;
    static ResultSet rs2 = null;
    static PreparedStatement insertWriter = null;
    static PreparedStatement deleteWriter= null;
    static PreparedStatement updateWriter= null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JComboBox<String> bookcb;
    private javax.swing.JComboBox<String> cboption;
    private javax.swing.JComboBox<String> countrycb;
    private javax.swing.JButton delete;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton logFile;
    private javax.swing.JButton query1;
    private javax.swing.JButton query2;
    private javax.swing.JTable result1Table;
    private javax.swing.JTable result2Table;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    static Statement statement2 = null; //gia to gemisma tou pinaka log file
    static ResultSet rs5 = null;
    private void loadData() {
         try{
             query1.setVisible(false);
             query2.setVisible(false);
             bookcb.setVisible(false);
             countrycb.setVisible(false);
             jScrollPane2.setVisible(false);
             jScrollPane3.setVisible(false);
             jScrollPane4.setVisible(false);
             jButton1.setVisible(false);
             
             //anoigw tin sindesi
            //dbConnection = DriverManager.getConnection (Dashboard.url,Dashboard.username,Dashboard.passwd);
            
            //Insert Writer
            String insertString = "select insertwr(?,?,?,?,?)";//insert into writer(wid,first_name,last_name,year_born,country) values (?,?,?,?,?)
            insertWriter = dbConnection.prepareStatement(insertString);
            
            //Update Writer
            String updateString = "select updatewr(?,?,?,?,?)";//update writer set first_name= ? , last_name= ?, year_born= ?, country= ? where wid= ?
            updateWriter = dbConnection.prepareStatement(updateString);
            
            //Delete Writer
            String deleteString = "select deletewr(?)";//delete from writer where wid = ?
            deleteWriter = dbConnection.prepareStatement(deleteString);
            
            //Query 1
            String query1 = "select * from getwrnamebook(?)";//select w.first_name,w.last_name from writer w, books b where w.wid = b.wid and b.title = ?
            selectWriters = dbConnection.prepareStatement(query1);
            
            //Query 2
            String query2 = "select * from getwrnamecountry(?)";//select w.first_name,w.last_name from writer w where w.country = ?
            selectWriters2 = dbConnection.prepareStatement(query2);
            
            
            //Gemizw ton pinaka
            statement =  dbConnection.createStatement();
            String selectString ="select * from getwr()";//SELECT * FROM writer
            rs = statement.executeQuery(selectString);
            DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
            model1.setRowCount(0);
            
            while(rs.next()){
                int writerId = rs.getInt("w_wid");
                String firstName = rs.getString("f_name");
                String lastName = rs.getString("l_name");
                int yearBorn = rs.getInt("y_born");
                String country = rs.getString("w_country");
                Object[] row = {writerId,firstName,lastName,yearBorn,country};
                model1.addRow(row);
            }
            
            String selectCount = "select getcountwr()";//Select COUNT(*) from writer
            rs = statement.executeQuery(selectCount);
            while(rs.next()){
                int count = rs.getInt("getcountwr");
                jLabel2.setText("Number of Writers: "+count);
            }
            statement.close();
            
               try{
         //Gemisw to log file
            statement2 = dbConnection.createStatement();
            String selectString2 = "select * from getwriterlog()";//SELECT * from writer_log
            rs5 = statement2.executeQuery(selectString2);
            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
            model2.setRowCount(0);
            
            while(rs5.next()){
                String operation = rs5.getString("w_operation");
                Timestamp stamp = rs5.getTimestamp("w_stamp");
                String userid = rs5.getString("w_userid");
                int wid = rs5.getInt("w_wid");
                String firstName = rs5.getString("f_name");
                String lastName = rs5.getString("l_name");
                int yearBorn = rs5.getInt("y_born");
                String country = rs5.getString("w_country");
                Object[] row = {operation,stamp,userid,wid,firstName,lastName,yearBorn,country};
                model2.addRow(row);
            }
            statement2.close();
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage(),"LOG FILE LOAD DATA",JOptionPane.INFORMATION_MESSAGE);
        }
            
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage(),"LoansFrame",JOptionPane.INFORMATION_MESSAGE);
        }
    }

    static Statement myList = null;
    static Statement myList2 = null;
    String bkTitle[] = new String[20]; 
    String countryArray[] = new String[20];
    private void mylist() {
        cboption.addItem("Select a Query");
        cboption.addItem("Query 1");
        cboption.addItem("Query 2");
        
        int i=0;
        int z=0;
        String bookTitle = "select gettitles()";
        String country = "select getcountrywr()";//select distinct country from writer
        try{
            myList = dbConnection.createStatement();
            myList2 = dbConnection.createStatement();
            
            rs = myList.executeQuery(bookTitle);
            rs2 = myList2.executeQuery(country);
            
            while(rs.next()){
                bkTitle[i] = rs.getString("gettitles");
                i++;
            }
            while(rs2.next()){
                countryArray[z] = rs2.getString("getcountrywr");
                z++;
            }
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage(),"myList Error",JOptionPane.INFORMATION_MESSAGE); 
        }
        bookcb.addItem("Επίλεξε ένα βιβλίο");
        countrycb.addItem("Επίλεξε μία χώρα");
        for(int y=0; y<=i-1;y++)
            bookcb.addItem(bkTitle[y]);
        for(int w=0; w<=z-1;w++)
            countrycb.addItem(countryArray[w]);
     }
    
    static boolean flag = true; //gia to log file table
    static Statement statement3 = null; //gia to call ths function createlog

    static void createLog() {
        //me to pou trexw to programma arxikopoieitai o pinakas log kai meta pou allazei to flag, ama allaksw tab kai epistrepsw sto loans frame, 
        //tote o pinakas den tha ksana arxikopoieithei kai tha diatirisei to periexomeno pou eixe 
         if(flag == true){
            //execute thn sql function create_writer_log()
            try{
                //anoigw tin sindesi
                dbConnection = DriverManager.getConnection (Dashboard.url,Dashboard.username,Dashboard.passwd);

                statement3 = dbConnection.createStatement();
                statement3.executeQuery("SELECT create_writer_log()");
                statement3.close();
            }catch(SQLException ex){
                JOptionPane.showMessageDialog(null, ex.getMessage(),"LOG FILE LOAD DATA",JOptionPane.INFORMATION_MESSAGE);
            }
            flag = !flag;
         }
    }
}
