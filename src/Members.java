
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
 import java.sql.*;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
 import javax.swing.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.netbeans.lib.awtextra.AbsoluteLayout;



/**
 *
 * @author teo
 */
public class Members extends javax.swing.JPanel {

    /**
     * Creates new form Catalogs
     */
    public Members() {
        initComponents();
        //createLog();
        loadData();
        firstname.setVisible(false);
        lastname.setVisible(false);
        searchbt.setVisible(false);
        textFname.setVisible(false);
        textLname.setVisible(false);
        jLabel3.setVisible(false);
        ages.setVisible(false);
        jLabel4.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        search_member = new javax.swing.JLabel();
        firstname = new javax.swing.JTextField();
        lastname = new javax.swing.JTextField();
        searchbt = new javax.swing.JButton();
        textFname = new javax.swing.JLabel();
        textLname = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        search_Age = new javax.swing.JLabel();
        ages = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        logFile = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(jTable6);

        setBackground(new java.awt.Color(51, 63, 30));
        setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jTable4.setBackground(new java.awt.Color(204, 204, 255));
        jTable4.setBorder(new javax.swing.border.MatteBorder(null));
        jTable4.setFont(new java.awt.Font("Dubai", 2, 14)); // NOI18N
        jTable4.setForeground(new java.awt.Color(0, 0, 0));
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Member Id", "First Name", "Last Name", "Member Since", "Age"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.setGridColor(new java.awt.Color(0, 0, 0));
        jTable4.setPreferredSize(new java.awt.Dimension(400, 402));
        jTable4.setShowGrid(true);
        jScrollPane4.setViewportView(jTable4);

        jLabel1.setBackground(new java.awt.Color(0, 28, 0));
        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LIBRARY MEMBERS");
        jLabel1.setMaximumSize(new java.awt.Dimension(156, 29));
        jLabel1.setMinimumSize(new java.awt.Dimension(156, 29));
        jLabel1.setPreferredSize(new java.awt.Dimension(156, 29));

        add.setBackground(new java.awt.Color(0, 0, 153));
        add.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("Add a member");
        add.setMaximumSize(new java.awt.Dimension(143, 23));
        add.setMinimumSize(new java.awt.Dimension(143, 23));
        add.setPreferredSize(new java.awt.Dimension(143, 30));
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(0, 0, 153));
        update.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Update a member");
        update.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        update.setPreferredSize(new java.awt.Dimension(143, 30));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(0, 0, 153));
        delete.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete a member");
        delete.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        delete.setPreferredSize(new java.awt.Dimension(143, 30));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Felix Titling", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        search_member.setBackground(new java.awt.Color(102, 102, 255));
        search_member.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        search_member.setForeground(new java.awt.Color(0, 0, 0));
        search_member.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search-interface-symbol (1).png"))); // NOI18N
        search_member.setText("Search a Member  ");
        search_member.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search_member.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        search_member.setOpaque(true);
        search_member.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                search_memberMouseClicked(evt);
            }
        });

        searchbt.setText("search");
        searchbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtActionPerformed(evt);
            }
        });

        textFname.setText(" First Name ");

        textLname.setText(" Last Name");

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel3.setText("jLabel3");
        jLabel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        search_Age.setBackground(new java.awt.Color(102, 102, 255));
        search_Age.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        search_Age.setForeground(new java.awt.Color(0, 0, 0));
        search_Age.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search-interface-symbol (1).png"))); // NOI18N
        search_Age.setText("Show Average Per Age");
        search_Age.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search_Age.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        search_Age.setOpaque(true);
        search_Age.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                search_AgeMouseClicked(evt);
            }
        });

        ages.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        ages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agesActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(204, 204, 255));
        jLabel4.setText("jLabel4");
        jLabel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        logFile.setFont(new java.awt.Font("Dubai Light", 3, 18)); // NOI18N
        logFile.setText("Log File");
        logFile.setMaximumSize(new java.awt.Dimension(136, 23));
        logFile.setMinimumSize(new java.awt.Dimension(136, 23));
        logFile.setPreferredSize(new java.awt.Dimension(136, 23));
        logFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logFileActionPerformed(evt);
            }
        });

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Operation", "Timestamp", "User Id", "Member Id", "First Name", "Last Name", "Member Since", "Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable5);

        jButton1.setFont(new java.awt.Font("Dubai Light", 3, 14)); // NOI18N
        jButton1.setText("Hide Log File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(64, 64, 64))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(search_member)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(92, 92, 92)
                                        .addComponent(searchbt))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(textFname)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(textLname))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(121, 121, 121)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ages, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(search_Age)
                                    .addComponent(jLabel4)))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(logFile, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap(179, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search_member, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_Age, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(textFname)
                                .addComponent(textLname))
                            .addComponent(ages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(searchbt)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(logFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        
        Object[] options1 = { "Submit", "Cancel" };
        Object[] options2 = { "New Submit", "Cancel" };
        
        JPanel panel = new JPanel();
        panel.setBackground(new java.awt.Color(255, 255, 203));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        
        //1o textfield
        panel.add(new JLabel("Member Id:"));
        JTextField MidtextField = new JTextField(10);
        panel.add(MidtextField);
        
        //2o textfield
        panel.add(new JLabel("First Name:"));
        JTextField FirstNametextField = new JTextField(10);
        panel.add(FirstNametextField);
        
        //3o textfield
        panel.add(new JLabel("Last Name:"));
        JTextField LastNametextField = new JTextField(10);
        panel.add(LastNametextField);
        
        //4o textfield
        panel.add(new JLabel("Member Since:"));
        JTextField MemberSincetextField = new JTextField(10);
        panel.add(MemberSincetextField);
        
        //5o textfield
        panel.add(new JLabel("Member Age:"));
        JTextField AgetextField = new JTextField(10);
        panel.add(AgetextField);
        
        int result2 = JOptionPane.YES_OPTION;
        int result = JOptionPane.YES_OPTION;
        
         while(result2 == JOptionPane.YES_OPTION && result == JOptionPane.YES_OPTION){   //AN PATISW NEW SUBMIT NA KANEI EPANALIPSI
            result = JOptionPane.showOptionDialog(null, panel, "Add a Member",
               JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
               options1, null);

            if (result == JOptionPane.YES_OPTION) {
                try{
                    //Pairnw tis times twn textfields
                    int mid = Integer.valueOf(MidtextField.getText());
                    String FirstName = FirstNametextField.getText();
                    String LastName = LastNametextField.getText();
                    String MemberSince =  MemberSincetextField.getText();
                    int age = Integer.valueOf(AgetextField.getText());
                    //Kanw insert
                    insertMember.setInt(1, mid);
                    insertMember.setString(2, FirstName);
                    insertMember.setString(3, LastName);
                    insertMember.setString(4, MemberSince);
                    insertMember.setInt(5, age);
                    try{
                    insertMember.executeUpdate();
                    }catch(Exception ex){
                        if(ex.getMessage().equals("A result was returned when none was expected.")){
                           
                        }else{
                             throw new Exception(ex);
                        }
                    }

                    JPanel panel2 = new JPanel();
                    panel2.setBackground(new java.awt.Color(255, 255, 203));
                    panel2.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

                    panel2.add(new JLabel("Submission Successful"));

                    result2 = JOptionPane.showOptionDialog(null, panel2, "Add a Member",
                        JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                            options2, null);

                    loadData(); //REFRESH
                    }catch(Exception ex){
                             JOptionPane.showMessageDialog(null, ex.getMessage(),"Insert a Member Error",JOptionPane.INFORMATION_MESSAGE);
                        }
                    //ADEIAZW TA PEDIA SE PERIPTWSI POU PATISA NEW SUBMIT
                    MidtextField.setText("");
                    FirstNametextField.setText("");
                    LastNametextField.setText("");
                    MemberSincetextField.setText("");
                    AgetextField.setText("");
                }
         } //TELOS WHILE
         
    }//GEN-LAST:event_addActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
         
        Object[] options1 = { "Ok", "Cancel" };
        Object[] options2 = { "Update", "Cancel" };
        Object[] options3 = { "New Update", "Cancel" }; 
        
        JPanel panel = new JPanel();
        panel.setBackground(new java.awt.Color(255, 255, 203));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        
        panel.add(new JLabel("Member Id:"));
        JTextField MemberIdtextField = new JTextField(10);
        panel.add(MemberIdtextField);
        
        int result=JOptionPane.YES_OPTION;
        int result2=JOptionPane.YES_OPTION;
        int result3=JOptionPane.YES_OPTION;
        
        
        while(result3 == JOptionPane.YES_OPTION && result2 == JOptionPane.YES_OPTION && result == JOptionPane.YES_OPTION){   //AN PATISW NEW SUBMIT NA KANEI EPANALIPSI
        
            result = JOptionPane.showOptionDialog(null, panel, "Select which member you want to update",
                JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                    options1, null);
        
            try{
               
                if (result == JOptionPane.YES_OPTION) {
                        //Pairnw tin timh
                        int mid = Integer.valueOf(MemberIdtextField.getText());
                        updateMember.setInt(5, mid);
                       
                        JPanel panel2 = new JPanel();
                        panel2.setBackground(new java.awt.Color(255, 255, 203));
                        panel2.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

                         //1o textfield    
                         panel2.add(new JLabel("First Name:"));
                         JTextField FirstNametextField2 = new JTextField(10);
                         panel2.add(FirstNametextField2);

                         //2o textfield
                         panel2.add(new JLabel("Last Name:"));
                         JTextField LastNametextField2 = new JTextField(10);
                         panel2.add(LastNametextField2);

                         //3o textfield
                         panel2.add(new JLabel("Member Since:"));
                         JTextField MemberSincetextField2 = new JTextField(10);
                         panel2.add(MemberSincetextField2);

                         //4o textfield
                         panel2.add(new JLabel("Member Age:"));
                         JTextField AgetextField2 = new JTextField(10);
                         panel2.add(AgetextField2);


                    result2 = JOptionPane.showOptionDialog(null, panel2, "Update Member",
                        JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                        options2, null);
                
                    if(result2 == JOptionPane.YES_OPTION){
                        try{
                            //Apothikevw tis arxikes times tou member pou thelw na kanw update
                            String selectString2 ="select * from getmembermid(?)";//SELECT * FROM member where mid= ?
                            preSelect =  dbConnection.prepareStatement(selectString2); 
                            preSelect.setInt(1, mid);
                            rs2 = preSelect.executeQuery();
                            
                            while(rs2.next()){
                            String FirstName0 = rs2.getString("f_name");
                            String LastName0 = rs2.getString("l_name");
                            String MemberSince0 = rs2.getString("m_since");
                            int age0 = rs2.getInt("m_age");
                        
                            //Pairnw tis kainouries times
                            String FirstName = FirstNametextField2.getText();
                            if(FirstName.equals(""))
                                FirstName = FirstName0;
                            
                            String LastName = LastNametextField2.getText();
                            if(LastName.equals(""))
                                LastName = LastName0;
                            
                            String MemberSince =  MemberSincetextField2.getText();
                            if(MemberSince.equals(""))
                                MemberSince = MemberSince0;
                            
                            String age =  AgetextField2.getText() ;
                            if(age.equals(""))
                                age = String.valueOf(age0);
                            
                            //Kanw update
                            updateMember.setString(1, FirstName);
                            updateMember.setString(2, LastName);
                            updateMember.setString(3, MemberSince);
                            updateMember.setInt(4, Integer.valueOf(age));
                           // try{
                            //updateMember.executeUpdate();
                            //}catch(Exception ex){
                              //      if(ex.getMessage().equals("A result was returned when none was expected.")){
                                        
                                //    }else{
                                  //      throw new Exception(ex);
                                   // }
                                //}
                            }
                            boolean did = updateMember.execute(); //kanw update kai tautoxrona pairnw ton arithmo twn updates pou ginane
                            JPanel panel3 = new JPanel();
                            panel3.setBackground(new java.awt.Color(255, 255, 203));
                            panel3.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
 
                            if(!did) 
                                panel3.add(new JLabel("Member not Found"));
                             
                            else  
                                panel3.add(new JLabel("Updated Successfully"));
                            result3 = JOptionPane.showOptionDialog(null, panel3, "Update a Member"
                                ,JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                                    options3, null);
                            loadData(); //REFRESH
                          }catch(Exception ex){
                            JOptionPane.showMessageDialog(null, "Member not Found","Update a Member Error",JOptionPane.INFORMATION_MESSAGE);
                                             }
                            //ADEIAZW TA PEDIA
                            MemberIdtextField.setText("");
                            FirstNametextField2.setText("");
                            LastNametextField2.setText("");     
                            MemberSincetextField2.setText("");   
                            AgetextField2.setText("");   
                         
                        } 
                    }
                
                 }catch(Exception ex){
                            JOptionPane.showMessageDialog(null, ex.getMessage(),"Update a Member Error",JOptionPane.INFORMATION_MESSAGE);
                            }
            
             
        }//TELOS WHILE
         
                
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        Object[] options1 = { "Delete", "Cancel" };
        Object[] options2 = { "New Delete", "Cancel" };
        
        JPanel panel = new JPanel();
        panel.setBackground(new java.awt.Color(255, 255, 203));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        
        panel.add(new JLabel("Member Id:"));
        JTextField MemberIdtextField = new JTextField(10);
        panel.add(MemberIdtextField);

        
        int result2 = JOptionPane.YES_OPTION;
        int result = JOptionPane.YES_OPTION;
        
        while(result2 == JOptionPane.YES_OPTION && result == JOptionPane.YES_OPTION){   //AN PATISW NEW SUBMIT NA KANEI EPANALIPSI
                result = JOptionPane.showOptionDialog(null, panel, "Delete a Member",
                  JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                  options1, null);

              if (result == JOptionPane.YES_OPTION) {
                  try{
                  //Pairnw thn timh
                  int mid = Integer.valueOf(MemberIdtextField.getText());
                  //Kanw delete
                  deleteMember.setInt(1, mid);
                  ResultSet rsr=null;
                  //try{
                  rsr=deleteMember.executeQuery();
                  //}catch(Exception ex){
                    //    if(ex.getMessage().equals("A result was returned when none was expected.")){
                            
                      //  }else{
                        //     throw new Exception(ex);
                        //}
                  //}
                  int exists=0;
                  while(rsr.next()){
                      exists = rsr.getInt("deletemember");
                      System.out.println(exists);
                  }
                  JPanel panel2 = new JPanel();
                  panel2.setBackground(new java.awt.Color(255, 255, 203));
                  panel2.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

                  if(exists == 0) 
                    panel2.add(new JLabel("Member not Found"));
                    
                else
                    panel2.add(new JLabel("Deleted Successfully"));

                  result2 = JOptionPane.showOptionDialog(null, panel2, "Delete a Member",
                      JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                          options2, null);
                  
                  loadData(); //REFRESH
                  }catch(Exception ex){
                     JOptionPane.showMessageDialog(null, ex.getMessage(),"Delete a Member Error",JOptionPane.INFORMATION_MESSAGE); 
                  }
                  //ADEIAZW TA PEDIA SE PERIPTWSI POU PATISA NEW SUBMIT
                  MemberIdtextField.setText("");
                }
        } //TELOS WHILE  
    }//GEN-LAST:event_deleteActionPerformed

    private void searchbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtActionPerformed
        String first = null;
        String last = null;
        String mid = null;
        try {
            String selectString ="select getmemberexists(?,?)";//SELECT COUNT(*) FROM member where first_name=? and last_name=?
            nameexists = dbConnection.prepareStatement(selectString);
            nameexists.setString(1, firstname.getText());
            nameexists.setString(2, lastname.getText());
            resultexist = nameexists.executeQuery();
            while(resultexist.next()){
                int flag = resultexist.getInt("getmemberexists");
                if(flag==1){
                    String showname = "select * from getnamemidmember(?,?)";//select first_name,last_name,mid from member where first_name=? and last_name=?
                    rename = dbConnection.prepareStatement(showname);
                    rename.setString(1, firstname.getText());
                    rename.setString(2, lastname.getText());
                    resultname = rename.executeQuery();
                    while(resultname.next()){
                        first = resultname.getString("f_name");
                        last = resultname.getString("l_name");
                        mid = resultname.getString("m_mid");
                    }
                    rename.close(); 
                    jLabel3.setText("<html>" + "Member : " + first + " " + last + "<br>" + " exists with mid " + mid+"</html>");
                }else{
                    
                    jLabel3.setText("Member : " + firstname.getText() + " " + lastname.getText() + " doesn't exists!");
                }
            }
            jLabel3.setVisible(true);
            nameexists.close();
        } catch (SQLException ex) {
            Logger.getLogger(Members.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchbtActionPerformed

    private void search_memberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_memberMouseClicked
        firstname.setVisible(true);
        lastname.setVisible(true);
        searchbt.setVisible(true);
        textFname.setVisible(true);
        textLname.setVisible(true);
    }//GEN-LAST:event_search_memberMouseClicked

    private void search_AgeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_AgeMouseClicked
        ages.setVisible(true);
        try {
            agesstatement =  dbConnection.createStatement();
            String selectages ="select getagesmembers();";//SELECT Distinct age FROM member ORDER BY age ASC
            resultages = agesstatement.executeQuery(selectages);
            while(resultages.next()){
                int age = resultages.getInt("getagesmembers");
                ages.addItem(String.valueOf(age));
            }
            
        agesstatement.close();
        } catch (SQLException ex) {
            Logger.getLogger(Members.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_search_AgeMouseClicked

    private void agesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agesActionPerformed
        jLabel4.setVisible(true);
        String age = String.valueOf(ages.getSelectedItem());
        int agss = Integer.valueOf(age);
        int sum=0;
        int spesum=0;
        try {
            //find all the number of members
            countages = dbConnection.createStatement();
            String  countall = "select getcountage();";//select COUNT(age)from member
            result1 = countages.executeQuery(countall);
            while(result1.next()){
                sum = result1.getInt("getcountage");
            }
            countages.close();
            //find how many have a specific age
            String speage = "select getspesificage(?)";//select COUNT(age) from member where age=?
            specificage = dbConnection.prepareStatement(speage);
            specificage.setInt(1, agss);
            result2 = specificage.executeQuery();
            while(result2.next()){
                spesum = result2.getInt("getspesificage");
            }
            specificage.close();
            double precedence = ((double)spesum/sum)*100;
            jLabel4.setText("the percentage of members with age " + age + " is : " + df1.format(precedence) + "%");       
        } catch (SQLException ex) {
            Logger.getLogger(Members.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_agesActionPerformed

    private void logFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logFileActionPerformed
        jScrollPane5.setVisible(true);
        jButton1.setVisible(true);

    }//GEN-LAST:event_logFileActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jScrollPane5.setVisible(false);
        jButton1.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed
    public static final DecimalFormat df1 = new DecimalFormat( "#.#" );
    static ResultSet result1 = null;
    static ResultSet result2 = null;
    static PreparedStatement specificage = null;
    static Statement countages = null;
    static ResultSet resultages = null;
    static Statement agesstatement = null;
    static PreparedStatement rename = null;
    static ResultSet resultname = null;
    static ResultSet resultexist = null;
    static PreparedStatement nameexists = null;
            
    static Connection dbConnection = null;
    static Statement statement = null;
    static PreparedStatement preSelect = null;
    static ResultSet rs = null;
    static ResultSet rs2 = null;
    static PreparedStatement insertMember = null;
    static PreparedStatement deleteMember = null;
    static PreparedStatement updateMember = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JComboBox<String> ages;
    private javax.swing.JButton delete;
    private javax.swing.JTextField firstname;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTextField lastname;
    private javax.swing.JButton logFile;
    private javax.swing.JLabel search_Age;
    private javax.swing.JLabel search_member;
    private javax.swing.JButton searchbt;
    private javax.swing.JLabel textFname;
    private javax.swing.JLabel textLname;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    static Statement statement2 = null; //gia to gemisma tou pinaka log file
    static ResultSet rs5 = null;

    private void loadData() {
    try{
            jScrollPane5.setVisible(false);
            jButton1.setVisible(false);
            //anoigw tin sindesi
            //dbConnection = DriverManager.getConnection (Dashboard.url,Dashboard.username,Dashboard.passwd);
            //select insertmember(?,?,?,?,?)
            //Insert Member insert into member(mid,first_name,last_name,member_since,age) values (?,?,?,?,?)
            String insertString = "select insertmember(?,?,?,?,?)";//insert into member(mid,first_name,last_name,member_since,age) values (?,?,?,?,?)
            insertMember = dbConnection.prepareStatement(insertString);
            
            //Update Member
            String updateString = "select updatemembers(?,?,?,?,?)";//update member set first_name= ? , last_name= ? , member_since= ? , age= ? where mid= ?
            updateMember = dbConnection.prepareStatement(updateString);
            
            //Delete Member
            String deleteString = "select deletemember(?)";//delete from member where mid = ?
            deleteMember = dbConnection.prepareStatement(deleteString);
            
            //Gemizw ton pinaka 
            statement =  dbConnection.createStatement();
            String selectString ="select * from getmembers()";//SELECT * FROM member
            rs = statement.executeQuery(selectString);
            DefaultTableModel model1 = (DefaultTableModel) jTable4.getModel();
            model1.setRowCount(0);
            
            while(rs.next()){
                int memberId = rs.getInt("m_mid");
                String firstName = rs.getString("f_name");
                String lastName = rs.getString("l_name");
                String memberSince = rs.getString("m_since");
                int age = rs.getInt("m_age");
                Object[] row = {memberId,firstName,lastName,memberSince,age};
                model1.addRow(row);
            }
            
            String selectCount = "select getcountmember();";//Select COUNT(*) from member
            rs = statement.executeQuery(selectCount);
            while(rs.next()){
                int count = rs.getInt("getcountmember");
                jLabel2.setText("Number of Members: "+count);
            }
            statement.close();
            
             //Gemisw to log file
            try{
                statement2 = dbConnection.createStatement();
               String selectString2 = "select * from getmemberlog()";//SELECT * from member_log
               rs5 = statement2.executeQuery(selectString2);
               DefaultTableModel model2 = (DefaultTableModel) jTable5.getModel();
               model2.setRowCount(0);

               while(rs5.next()){
                   String operation = rs5.getString("l_operation");
                   Timestamp stamp = rs5.getTimestamp("l_stamp");
                   String userid = rs5.getString("l_userid");
                   int mid = rs5.getInt("l_mid");
                   String firstName = rs5.getString("f_name");
                   String lastName = rs5.getString("l_name");
                   String memberSince = rs5.getString("m_since");
                   int age = rs5.getInt("m_age");
                    Object[] row = {operation,stamp,userid,mid,firstName,lastName,memberSince,age};
                   model2.addRow(row);
               }
               statement2.close();
           }catch(SQLException ex){
               JOptionPane.showMessageDialog(null, ex.getMessage(),"LOG FILE LOAD DATA",JOptionPane.INFORMATION_MESSAGE);
           }
            
        }catch(SQLException ex){
            while(ex != null) {
		JOptionPane.showMessageDialog(null, ex.getMessage(),"LoansFrame",JOptionPane.INFORMATION_MESSAGE);
		ex = ex.getNextException();
            }
            
        }
    }
    
    static boolean flag = true; //gia to log file table
    static Statement statement3 = null; //gia to call ths function createlog
    static void createLog() {
        //me to pou trexw to programma arxikopoieitai o pinakas log kai meta pou allazei to flag, ama allaksw tab kai epistrepsw sto loans frame, 
        //tote o pinakas den tha ksana arxikopoieithei kai tha diatirisei to periexomeno pou eixe 
         if(flag == true){
            //execute thn sql function create_writer_log()
             try{
                 //anoigw tin sindesi
                 dbConnection = DriverManager.getConnection (Dashboard.url,Dashboard.username,Dashboard.passwd);

                 statement3 = dbConnection.createStatement();
                 statement3.executeQuery("SELECT create_member_log()");
                 statement3.close();
             }catch(SQLException ex){
                 JOptionPane.showMessageDialog(null, ex.getMessage(),"LOG FILE LOAD DATA",JOptionPane.INFORMATION_MESSAGE);
             }
             flag = !flag;
         }
    }
}
