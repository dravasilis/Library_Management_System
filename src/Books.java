 import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
public class Books extends javax.swing.JPanel {

   
    public Books() {
        initComponents();
        loadData();
        createLog();
        loaddatacombobox();
        loaddatacombobox_writers();
        jScrollPane4.setVisible(false);
        writer_text.setVisible(false);
        jScrollPane3.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Show = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jSlider1 = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        Show_Writer = new javax.swing.JButton();
        writer_text = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        result2Table = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        result1Table = new javax.swing.JTable();
        logFile = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 63, 30));
        setForeground(new java.awt.Color(51, 51, 51));
        setPreferredSize(new java.awt.Dimension(750, 561));
        setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(605, 404));

        jTable1.setBackground(new java.awt.Color(204, 204, 255));
        jTable1.setFont(new java.awt.Font("Dubai", 2, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Book Id", "Writer Id", "Publisher Id", "Title", "Year Published", "Genre", "Availability", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTable1.setMaximumSize(new java.awt.Dimension(2147483647, 200));
        jTable1.setMinimumSize(new java.awt.Dimension(75, 200));
        jTable1.setPreferredSize(new java.awt.Dimension(400, 402));
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(240);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(50);
        }

        add.setBackground(new java.awt.Color(0, 0, 153));
        add.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("Add a Book");
        add.setMaximumSize(new java.awt.Dimension(145, 23));
        add.setMinimumSize(new java.awt.Dimension(145, 23));
        add.setPreferredSize(new java.awt.Dimension(143, 30));
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(0, 0, 153));
        update.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Update a Book");
        update.setMaximumSize(new java.awt.Dimension(145, 23));
        update.setMinimumSize(new java.awt.Dimension(145, 23));
        update.setPreferredSize(new java.awt.Dimension(143, 30));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(0, 0, 153));
        delete.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete a Book");
        delete.setMaximumSize(new java.awt.Dimension(145, 23));
        delete.setMinimumSize(new java.awt.Dimension(145, 23));
        delete.setPreferredSize(new java.awt.Dimension(143, 30));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 28, 0));
        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BOOK DATA");
        jLabel1.setMaximumSize(new java.awt.Dimension(156, 29));
        jLabel1.setMinimumSize(new java.awt.Dimension(156, 29));
        jLabel1.setPreferredSize(new java.awt.Dimension(156, 29));

        jLabel2.setFont(new java.awt.Font("Gadugi", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel3.setBackground(new java.awt.Color(46, 203, 233));
        jLabel3.setFont(new java.awt.Font("Jamrul", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Select Book's Gerne : ");

        Show.setText("Show");
        Show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowActionPerformed(evt);
            }
        });

        jSlider1.setMajorTickSpacing(20);
        jSlider1.setMaximum(1986);
        jSlider1.setMinimum(1900);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jSlider1MouseReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Jamrul", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Show Bookss up to year :");

        jLabel5.setBackground(new java.awt.Color(204, 204, 255));
        jLabel5.setFont(new java.awt.Font("Jamrul", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Show Books Available :");

        Show_Writer.setText("Show Availability");
        Show_Writer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Show_WriterActionPerformed(evt);
            }
        });

        writer_text.setText("jLabel6");

        result2Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(result2Table);

        result1Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(result1Table);

        logFile.setFont(new java.awt.Font("Dubai Light", 3, 18)); // NOI18N
        logFile.setText("Log File");
        logFile.setMaximumSize(new java.awt.Dimension(136, 23));
        logFile.setMinimumSize(new java.awt.Dimension(136, 23));
        logFile.setPreferredSize(new java.awt.Dimension(136, 23));
        logFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logFileActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Operation", "Timestamp", "User Id", "Book Id", "Writer Id", "Publisher Id", "Title", "Year Published", "Genre", "Availability", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable2);

        jButton1.setFont(new java.awt.Font("Dubai Light", 3, 14)); // NOI18N
        jButton1.setText("Hide Log File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(64, 64, 64))
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(61, 61, 61)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                            .addComponent(Show)
                                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, 210, Short.MAX_VALUE))
                                        .addGap(0, 48, Short.MAX_VALUE)))))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Show_Writer))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(149, 149, 149)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(writer_text, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(logFile, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4))
                            .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addComponent(Show))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Show_Writer)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(writer_text))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(logFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        Object[] options1 = { "Submit", "Cancel" };
        Object[] options2 = { "New Submit", "Cancel" };
        
        JPanel panel = new JPanel();
        panel.setBackground(new java.awt.Color(255, 255, 203));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        
        //1o texfield
        panel.add(new JLabel("Book Id:"));
        JTextField BidtextField = new JTextField(10);
        panel.add(BidtextField);
        
        //2o texfield
        panel.add(new JLabel("Writer Id:"));
        JTextField WidtextField = new JTextField(10);
        panel.add(WidtextField);
        
        //3o texfield
        panel.add(new JLabel("Publisher Id:"));
        JTextField PidtextField = new JTextField(10);
        panel.add(PidtextField);
        
        //4o texfield
        panel.add(new JLabel("Title:"));
        JTextField TitletextField = new JTextField(10);
        panel.add(TitletextField);
        
        //5o texfield
        panel.add(new JLabel("Year Published:"));
        JTextField YearPublishedtextField = new JTextField(10);
        panel.add(YearPublishedtextField);
        
        //6o texfield
        panel.add(new JLabel("Genre:"));
        JTextField GenretextField = new JTextField(10);
        panel.add(GenretextField);
        
        //7o texfield
        panel.add(new JLabel("Availability:"));
        JTextField AvailabilitytextField = new JTextField(10);
        panel.add(AvailabilitytextField);
        
        //8o texfield
        panel.add(new JLabel("Price:"));
        JTextField PricetextField = new JTextField(10);
        panel.add(PricetextField);

        int result2 = JOptionPane.YES_OPTION;
        int result = JOptionPane.YES_OPTION;
        
        while(result2 == JOptionPane.YES_OPTION && result == JOptionPane.YES_OPTION){   //AN PATISW NEW SUBMIT NA KANEI EPANALIPSI
          result = JOptionPane.showOptionDialog(null, panel, "Add a Book",
            JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
            options1, null);
 
        if (result == JOptionPane.YES_OPTION) {
          try{
              //Pairnw tis times twn textfields
              int bid = Integer.valueOf(BidtextField.getText());
              int wid = Integer.valueOf(WidtextField.getText());
              int pid = Integer.valueOf(PidtextField.getText());
              String title = TitletextField.getText();
              int yearPublished = Integer.valueOf(YearPublishedtextField.getText());
              String genre = GenretextField.getText();
              String availability = AvailabilitytextField.getText();
              String price = PricetextField.getText();
              //Kanw insert
              insertBook.setInt(1, bid);
              insertBook.setInt(2, wid);
              insertBook.setInt(3, pid);
              insertBook.setString(4, title);
              insertBook.setInt(5, yearPublished);
              insertBook.setString(6, genre);
              insertBook.setString(7, availability);
              insertBook.setString(8, price);
                try{
                    insertBook.executeUpdate();
                }catch(Exception ex){
                        if(!ex.getMessage().equals("A result was returned when none was expected.")){
                            throw new Exception(ex);
                        }
                }
                JPanel panel2 = new JPanel();
                panel2.setBackground(new java.awt.Color(255, 255, 203));
                panel2.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

                panel2.add(new JLabel("Submission Successful"));

                result2 = JOptionPane.showOptionDialog(null, panel2, "Add a Member",
                    JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                        options2, null);
              
             loadData(); //REFRESH  
          }catch(Exception ex){
                JOptionPane.showMessageDialog(null, ex.getMessage(),"Insert a Book Error",JOptionPane.INFORMATION_MESSAGE);
                 }
            //ADEIAZW TA PEDIA
            BidtextField.setText("");
            WidtextField.setText("");
            PidtextField.setText("");     
            TitletextField.setText("");   
            YearPublishedtextField.setText("");   
            GenretextField.setText("");  
            AvailabilitytextField.setText("");  
            PricetextField.setText("");  
            }
        }//TELOS WHILE
    }//GEN-LAST:event_addActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        Object[] options1 = { "Ok", "Cancel" };
        Object[] options2 = { "Update", "Cancel" };
        Object[] options3 = { "New Update", "Cancel" }; 
        
        JPanel panel = new JPanel();
        panel.setBackground(new java.awt.Color(255, 255, 203));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        
        panel.add(new JLabel("Book Id:"));
        JTextField BidtextField = new JTextField(10);
        panel.add(BidtextField);
        
        int result=JOptionPane.YES_OPTION;
        int result2=JOptionPane.YES_OPTION;
        int result3=JOptionPane.YES_OPTION;
        
        
        while(result3 == JOptionPane.YES_OPTION && result2 == JOptionPane.YES_OPTION && result == JOptionPane.YES_OPTION){   //AN PATISW NEW SUBMIT NA KANEI EPANALIPSI
          result = JOptionPane.showOptionDialog(null, panel, "Update a Book",
                JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                    options1, null);
        
        try{
             
            if (result == JOptionPane.YES_OPTION) {
                //Pairnw tin timh
                int bid = Integer.valueOf(BidtextField.getText());
                updateBook.setInt(8, bid);
               
            JPanel panel2 = new JPanel();
            panel2.setBackground(new java.awt.Color(255, 255, 203));
            panel2.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
           
             //1o textfield    
             panel2.add(new JLabel("Writer Id:"));
             JTextField WidtextField = new JTextField(10);
             panel2.add(WidtextField);

             //2o textfield
             panel2.add(new JLabel("Publisher Id:"));
             JTextField PidtextField = new JTextField(10);
             panel2.add(PidtextField);
             
             //3o textfield
             panel2.add(new JLabel("Title:"));
             JTextField TitletextField = new JTextField(10);
             panel2.add(TitletextField);
             
             //4o textfield
             panel2.add(new JLabel("Year Published:"));
             JTextField yearPublishedtextField = new JTextField(10);
             panel2.add(yearPublishedtextField);
             
             //5o textfield
             panel2.add(new JLabel("Genre:"));
             JTextField GenretextField = new JTextField(10);
             panel2.add(GenretextField);
             
             //6o textfield
             panel2.add(new JLabel("Availability:"));
             JTextField AvailabilitytextField = new JTextField(10);
             panel2.add(AvailabilitytextField);
             
             //7o textfield
             panel2.add(new JLabel("Price:"));
             JTextField PricetextField = new JTextField(10);
             panel2.add(PricetextField);
             
               result2 = JOptionPane.showOptionDialog(null, panel2, "Update Book",
             JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
             options2, null);
          
             if(result2 == JOptionPane.YES_OPTION){
                try{
                    //Apothikevw tis arxikes times tou member pou thelw na kanw update
                    String selectString2 ="select * from bookbid(?)";//SELECT * FROM books where bid= ?
                    preSelect =  dbConnection.prepareStatement(selectString2); 
                    preSelect.setInt(1, bid);
                    rs2 = preSelect.executeQuery();

                    while(rs2.next()){
                    int wid0 = rs2.getInt("b_wid");
                    int pid0 = rs2.getInt("b_pid");
                    String title0 = rs2.getString("b_title");
                    int yearPublished0 = rs2.getInt("y_published");
                    String genre0 = rs2.getString("b_genre");
                    String availability0 = rs2.getString("b_availability");
                    String price0 = rs2.getString("b_price");

                    //Pairnw tis kainouries times
                    String wid = WidtextField.getText();
                    if(wid.equals(""))
                        wid = String.valueOf(wid0);

                    String pid = PidtextField.getText();
                    if(pid.equals(""))
                        pid = String.valueOf(pid0);

                    String title =  TitletextField.getText();
                    if(title.equals(""))
                        title = title0;

                    String yearPublished =  yearPublishedtextField.getText() ;
                    if(yearPublished.equals(""))
                        yearPublished = String.valueOf(yearPublished0);
                    
                    String genre =  GenretextField.getText();
                    if(genre.equals(""))
                        genre = genre0;
                    
                    String availability =  AvailabilitytextField.getText();
                    if(availability.equals(""))
                        availability = availability0;
                    
                    String price =  PricetextField.getText();
                    if(price.equals(""))
                        price = price0;
                      
                    //Kanw update
                    updateBook.setInt(1,Integer.valueOf(wid));
                    updateBook.setInt(2, Integer.valueOf(pid));
                    updateBook.setString(3, title);
                    updateBook.setInt(4, Integer.valueOf(yearPublished));
                    updateBook.setString(5, genre);
                    updateBook.setString(6, availability);
                    updateBook.setString(7, price);
                   // try{
                    //updateBook.executeUpdate();
                    //}catch(Exception ex){
                      //  if(!ex.getMessage().equals("A result was returned when none was expected.")){
                        //    throw new Exception(ex);
                        //}
                    //}
                    }
                    boolean did = updateBook.execute(); //kanw update kai tautoxrona pairnw ton arithmo twn updates pou ginane
                    JPanel panel3 = new JPanel();
                    panel3.setBackground(new java.awt.Color(255, 255, 203));
                    panel3.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

                    if(!did) 
                        panel3.add(new JLabel("Book not Found"));
 
                    else 
                        panel3.add(new JLabel("Updated Successfully"));
 
                    result3 = JOptionPane.showOptionDialog(null, panel3, "Update a Book",
                        JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                            options3, null);
                     loadData(); //REFRESH
                     }catch(Exception ex){
                        JOptionPane.showMessageDialog(null, "Update a Book Error","Update a Book Error",JOptionPane.INFORMATION_MESSAGE);
                                        }
                    //ADEIAZW TA PEDIA
                    BidtextField.setText("");
                    WidtextField.setText("");
                    PidtextField.setText("");     
                    TitletextField.setText("");   
                    yearPublishedtextField.setText("");   
                    GenretextField.setText("");  
                    AvailabilitytextField.setText("");  
                    PricetextField.setText("");  
               
                  }
              }
        }catch(Exception ex){
                        JOptionPane.showMessageDialog(null, ex.getMessage(),"Update a Book Error",JOptionPane.INFORMATION_MESSAGE);
            }
        }//TELOS WHILE
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        Object[] options1 = { "Delete", "Cancel" };
        Object[] options2 = { "New Delete", "Cancel" };
        
        JPanel panel = new JPanel();
        panel.setBackground(new java.awt.Color(255, 255, 203));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        
        panel.add(new JLabel("Book Id:"));
        JTextField BidtextField = new JTextField(10);
        panel.add(BidtextField);
        
        int result2 = JOptionPane.YES_OPTION;
        int result = JOptionPane.YES_OPTION;
        
        while(result2 == JOptionPane.YES_OPTION && result == JOptionPane.YES_OPTION){   //AN PATISW NEW SUBMIT NA KANEI EPANALIPSI
          result = JOptionPane.showOptionDialog(null, panel, "Delete a Book",
            JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
            options1, null);
 
        if (result == JOptionPane.YES_OPTION) {
          try{
            //Pairnw thn timh
            int bid = Integer.valueOf(BidtextField.getText());
            //Kanw delete
            deleteBook.setInt(1, bid);
            //try{
            ResultSet rsr=null;
            rsr=deleteBook.executeQuery();
            //}catch(Exception ex){
                //if(ex.getMessage().equals("A result was returned when none was expected.")){
                //    throw new Exception(ex);
              //  }
            //}
            
            int exists=0;
            while(rsr.next()){
                exists = rsr.getInt("deletebook");
                System.out.println(exists);
            }
            JPanel panel2 = new JPanel();
                  panel2.setBackground(new java.awt.Color(255, 255, 203));
                  panel2.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

                  if(exists == 0) 
                    panel2.add(new JLabel("Book not Found"));
                    
                else
                    panel2.add(new JLabel("Deleted Successfully"));

                  result2 = JOptionPane.showOptionDialog(null, panel2, "Delete a Book",
                      JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                          options2, null);
             loadData(); //REFRESH
             }catch(Exception ex){
               JOptionPane.showMessageDialog(null, ex.getMessage(),"Delete a Book Error",JOptionPane.INFORMATION_MESSAGE); 
                }
                //ADEIAZW TA PEDIA SE PERIPTWSI POU PATISA NEW SUBMIT
                BidtextField.setText("");
            }
        }//TELOS WHILE
    }//GEN-LAST:event_deleteActionPerformed

    private void ShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowActionPerformed
        jScrollPane4.setVisible(true);
        String genrecombo = (String)jComboBox1.getSelectedItem();
        DefaultTableModel model1 = (DefaultTableModel) result1Table.getModel();
        model1.setRowCount(0);
        //if(flag ) 
          //  jScrollPane2.setVisible(true);
        
        //else 
          //  jScrollPane2.setVisible(false);
        
        //flag = !flag;

        //jList1.setListData(listData);
        //int counttitle=0;
        //int i=0;
        try {
            /*//metrima ton titlwn p epele3e o xrhsths , wste na dimiourgisoume analogo pinaka me tosa stoixeia.
            String counttitl = "select getcountgenre(?)";//select COUNT(title) from books where genre=?
            counttitles = dbConnection.prepareStatement(counttitl);
            counttitles.setString(1, genrecombo);
            counttitlers = counttitles.executeQuery();
            while(counttitlers.next()){
                counttitle = counttitlers.getInt("getcountgenre");
            }
            counttitles.close();
            *///teleiwnei edw to metrima 
            
            //edw 3ekinaei to gemisma tou pinaka kai h emfanisi t
            String titles = "select getttilegenre(?)";//select title from books where genre=?
            selectedgenre = dbConnection.prepareStatement(titles);
            selectedgenre.setString(1, genrecombo);
            titlers = selectedgenre.executeQuery();
            while(titlers.next()){
                String name = titlers.getString("getttilegenre");
                Object[] row = { name};
                model1.addRow(row);
            }
            selectedgenre.close();
            //edw teliwnei
        } catch (SQLException ex) {
            Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ShowActionPerformed

    private void jSlider1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider1MouseReleased
        jScrollPane3.setVisible(true);
        DefaultTableModel model2 = (DefaultTableModel) result2Table.getModel();
        model2.setRowCount(0);
        int value = jSlider1.getValue();
        //int counter=0;
        //int i=0;
        try {
            /*//statement
            String countresults = "select getcountyearpublished(?)";//SELECT COUNT(year_published) FROM books WHERE year_published<=?
            countyear = dbConnection.prepareStatement(countresults);
            countyear.setInt(1, value);
            yearsrs = countyear.executeQuery();
            while(yearsrs.next()){
                counter = yearsrs.getInt("getcountyearpublished");
            }
            countyear.close();
            *///ends_here
            
            //prepare statement
            String yearsvalue = "select gettitleyearpublished(?)";//SELECT title FROM books where year_published<=?
            yearval = dbConnection.prepareStatement(yearsvalue);
            yearval.setInt(1, value);
            yearresult = yearval.executeQuery();
            while(yearresult.next()){
                String name = yearresult.getString("gettitleyearpublished");
                Object[] row = { name};
                model2.addRow(row);
            }
            yearval.close();
            //ends here
        } catch (SQLException ex) {
            Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);
        }

        
    }//GEN-LAST:event_jSlider1MouseReleased

    static PreparedStatement availablequery = null;
    static ResultSet availableget = null; 
    private void Show_WriterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Show_WriterActionPerformed
        String bookname = (String)jComboBox2.getSelectedItem();
        writer_text.setVisible(true);
        String isavailable = null;
        
        try {
            String selectavailable = "select getbookavailable(?)";//SELECT availability FROM books where title=?
            availablequery = dbConnection.prepareStatement(selectavailable);
            availablequery.setString(1, bookname);
            availableget = availablequery.executeQuery();
            while(availableget.next()){
                isavailable = availableget.getString("getbookavailable");
            }
            availablequery.close();
            if("Yes".equals(isavailable)){
                writer_text.setText("<html>" + "<b>"+ bookname + " :" +"<br><br>"+ isavailable + " , </b>" + "<b>"+ "It's Available Right Now!"+ "</b>" + "</html>");                
            }else{
                writer_text.setText("<html>" + "<b>"+ bookname + " :" +"<br><br>"+ "</b>" + "<b>"+ "It's Not Available Right Now!"+ "</b>" + "</html>");                            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_Show_WriterActionPerformed

    private void logFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logFileActionPerformed
        jScrollPane5.setVisible(true);
        jButton1.setVisible(true);
    }//GEN-LAST:event_logFileActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jScrollPane5.setVisible(false);
        jButton1.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed
    static PreparedStatement countyear = null;
    static ResultSet yearsrs = null;
    
    static ResultSet yearresult = null;
    static PreparedStatement yearval = null;

    
    static PreparedStatement counttitles = null;
    static ResultSet counttitlers = null; 

    static PreparedStatement selectedgenre = null;
    static ResultSet titlers = null; 

    static Statement genrestatement = null;
    static ResultSet genrers = null; 

    
    public static Connection dbConnection = null;
    static Statement statement = null;
    static PreparedStatement preSelect = null;
    static ResultSet rs = null; 
    static ResultSet rs2 = null;
    static PreparedStatement insertBook = null;
    static PreparedStatement deleteBook= null;
    static PreparedStatement updateBook= null;
    
    static boolean flag = true;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Show;
    private javax.swing.JButton Show_Writer;
    private javax.swing.JButton add;
    private javax.swing.JButton delete;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton logFile;
    private javax.swing.JTable result1Table;
    private javax.swing.JTable result2Table;
    private javax.swing.JButton update;
    private javax.swing.JLabel writer_text;
    // End of variables declaration//GEN-END:variables

    static Statement statement2 = null; //gia to gemisma tou pinaka log file
    static ResultSet rs5 = null; //gia to log file
    private void loadData() {
            jScrollPane5.setVisible(false);
            jButton1.setVisible(false);
        
           try{
             //anoigo tin sindesi
            //dbConnection = DriverManager.getConnection (Dashboard.url,Dashboard.username,Dashboard.passwd);
            
            //Insert book
            String insertString = "select insertbooks(?,?,?,?,?,?,?,?)";//insert into books(bid,wid,pid,title,Year_Published,genre,availability,price) values (?,?,?,?,?,?,?,?)
            insertBook = dbConnection.prepareStatement(insertString);
            
            //Update book
            String updateString = "select updatebook(?,?,?,?,?,?,?,?)";//update books set wid= ? , pid= ?, title= ?, Year_Published= ?, genre= ?, availability= ?, price=? where bid= ?
            updateBook = dbConnection.prepareStatement(updateString);
            
            //Delete book
            String deleteString = "select deletebook(?)";//delete from books where bid = ?
            deleteBook = dbConnection.prepareStatement(deleteString);
            
            statement =  dbConnection.createStatement();
            String selectString ="select * from getbook()";//SELECT * FROM books
            rs = statement.executeQuery(selectString);
            DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
            model1.setRowCount(0);
            
            while(rs.next()){
                int bookId = rs.getInt("b_bid");
                int writerId = rs.getInt("b_wid");
                int publisherId = rs.getInt("b_pid");
                String title = rs.getString("b_title");
                int yearPublished = rs.getInt("y_published");
                String genre = rs.getString("b_genre");
                String availability = rs.getString("b_availability");
                String price = rs.getString("b_price");
                Object[] row = {bookId,writerId,publisherId,title,yearPublished,genre,availability,price};
                model1.addRow(row);
            }
            
            String selectCount = "select getcountbooks();";//Select COUNT(*) from books
            rs = statement.executeQuery(selectCount);
            while(rs.next()){
                int count = rs.getInt("getcountbooks");
                jLabel2.setText("Number of Books: "+count);
            }
            statement.close();
            
            //Gemisw to log file
            try{
                statement2 = dbConnection.createStatement();
               String selectString2 = "select * from getbooklog()";//SELECT * from books_log
               rs5 = statement2.executeQuery(selectString2);
               DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
               model2.setRowCount(0);

               while(rs5.next()){
                   String operation = rs5.getString("b_operation");
                   Timestamp stamp = rs5.getTimestamp("b_stamp");
                   String userid = rs5.getString("b_userid");
                   int bid = rs5.getInt("b_bid");
                   int wid = rs5.getInt("b_wid");
                   int pid = rs5.getInt("b_pid");
                   String title = rs5.getString("b_title");
                   int yearPublished = rs5.getInt("y_published");
                   String genre = rs5.getString("b_genre");
                   String availability = rs5.getString("b_availability");
                   String price = rs5.getString("b_price");
                   
                   Object[] row = {operation,stamp,userid,bid,wid,pid,title,yearPublished,genre,availability,price};
                   model2.addRow(row);
               }
               statement2.close();
           }catch(SQLException ex){
               JOptionPane.showMessageDialog(null, ex.getMessage(),"LOG FILE LOAD DATA",JOptionPane.INFORMATION_MESSAGE);
           }
            
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage(),"LoansFrame",JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void loaddatacombobox() {
        try {
            genrestatement = dbConnection.createStatement();
            String selectgenre = "select getgenre();";//SELECT DISTINCT genre FROM books
            genrers = genrestatement.executeQuery(selectgenre);
            while(genrers.next()){
                jComboBox1.addItem(genrers.getString("getgenre"));
            }
            genrestatement.close();
        } catch (SQLException ex) {
            Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    static Statement booksname = null;
    static ResultSet books = null; 

    private void loaddatacombobox_writers() {
        try {
            booksname = dbConnection.createStatement();
            String selectbooknames = "select gettitles();";//SELECT title FROM books
            books = booksname.executeQuery(selectbooknames);
            while(books.next()){
                jComboBox2.addItem(books.getString("gettitles"));
            }
            booksname.close();
        } catch (SQLException ex) {
            Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    static Statement statement3 = null; //gia to call ths function createlog
    static void createLog() {
        //me to pou trexw to programma arxikopoieitai o pinakas log kai meta pou allazei to flag, ama allaksw tab kai epistrepsw sto loans frame, 
        //tote o pinakas den tha ksana arxikopoieithei kai tha diatirisei to periexomeno pou eixe 
         if(flag == true){
            //execute thn sql function create_books_log()
            try{
                //anoigw tin sindesi
                dbConnection = DriverManager.getConnection (Dashboard.url,Dashboard.username,Dashboard.passwd);

                statement3 = dbConnection.createStatement();
                statement3.executeQuery("SELECT create_books_log()");
                statement3.close();
            }catch(SQLException ex){
                JOptionPane.showMessageDialog(null, ex.getMessage(),"CREATE LOG",JOptionPane.INFORMATION_MESSAGE);
            }
            flag = !flag;
        }
    }
}
