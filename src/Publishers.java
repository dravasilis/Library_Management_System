/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
import java.sql.*;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author teo
 */
public class Publishers extends javax.swing.JPanel {

    /**
     * Creates new form Settings
     */
    public Publishers() {
        initComponents();
        loadData();
        mylist();
        createLog();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cboption = new javax.swing.JComboBox<>();
        query1 = new javax.swing.JButton();
        bookcb = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        result1Table = new javax.swing.JTable();
        query2 = new javax.swing.JButton();
        citycb = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        result2Table = new javax.swing.JTable();
        logFile = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 63, 30));
        setPreferredSize(new java.awt.Dimension(743, 567));
        setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jTable1.setBackground(new java.awt.Color(204, 204, 255));
        jTable1.setFont(new java.awt.Font("Dubai", 2, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Published Id", "Name", "City"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTable1.setPreferredSize(new java.awt.Dimension(462, 402));
        jTable1.setSelectionBackground(new java.awt.Color(51, 51, 51));
        jTable1.setSelectionForeground(new java.awt.Color(51, 51, 51));
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setBackground(new java.awt.Color(0, 28, 0));
        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PUBLISHERS DATA");
        jLabel1.setMaximumSize(new java.awt.Dimension(156, 29));
        jLabel1.setMinimumSize(new java.awt.Dimension(156, 29));
        jLabel1.setPreferredSize(new java.awt.Dimension(156, 29));

        add.setBackground(new java.awt.Color(0, 0, 153));
        add.setFont(new java.awt.Font("Gill Sans MT", 1, 14)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("Add a Publisher");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(0, 0, 153));
        update.setFont(new java.awt.Font("Gill Sans MT", 1, 14)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Update a Publisher");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(0, 0, 153));
        delete.setFont(new java.awt.Font("Gill Sans MT", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete a Publisher");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Franklin Gothic Medium", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel3.setFont(new java.awt.Font("Dubai Light", 3, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Select Query");

        cboption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboptionActionPerformed(evt);
            }
        });

        query1.setFont(new java.awt.Font("Century Gothic", 3, 12)); // NOI18N
        query1.setForeground(new java.awt.Color(0, 0, 0));
        query1.setText("Εμφάνισε τον εκδότη που έχει εκδώσει το συγκεκριμένο βιβλίο");
        query1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                query1ActionPerformed(evt);
            }
        });

        bookcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookcbActionPerformed(evt);
            }
        });

        result1Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Publisher"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(result1Table);

        query2.setText("Εμφάνισε τον εκδότη που είναι στην συγκεκριμένη πόλη");
        query2.setToolTipText("");
        query2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                query2ActionPerformed(evt);
            }
        });

        citycb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                citycbActionPerformed(evt);
            }
        });

        result2Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Publisher"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(result2Table);

        logFile.setFont(new java.awt.Font("Dubai Light", 3, 18)); // NOI18N
        logFile.setText("Log File");
        logFile.setMaximumSize(new java.awt.Dimension(136, 23));
        logFile.setMinimumSize(new java.awt.Dimension(136, 23));
        logFile.setPreferredSize(new java.awt.Dimension(136, 23));
        logFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logFileActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Operation", "Timestamp", "User Id", "Published Id", "Name", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable2);

        jButton1.setFont(new java.awt.Font("Dubai Light", 3, 14)); // NOI18N
        jButton1.setText("Hide Log File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(64, 64, 64))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(citycb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bookcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(query2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(query1)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logFile, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(add)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(update)
                    .addComponent(cboption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delete)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(query1)
                        .addComponent(query2)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(citycb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(logFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        Object[] options1 = { "Submit", "Cancel" };
        Object[] options2 = { "New Submit", "Cancel" };
         
        JPanel panel = new JPanel();
        panel.setBackground(new java.awt.Color(255, 255, 203));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        
        //1o textfield
        panel.add(new JLabel("Publisher Id:"));
        JTextField PidtextField = new JTextField(10);
        panel.add(PidtextField);
        
        //2o textfield
        panel.add(new JLabel("Name:"));
        JTextField NametextField = new JTextField(10);
        panel.add(NametextField);
        
        //3o textfield
        panel.add(new JLabel("City:"));
        JTextField CitytextField = new JTextField(10);
        panel.add(CitytextField);
        
        int result2 = JOptionPane.YES_OPTION;
        int result = JOptionPane.YES_OPTION;
        
        while(result2 == JOptionPane.YES_OPTION && result == JOptionPane.YES_OPTION){   //AN PATISW NEW SUBMIT NA KANEI EPANALIPSI
          result = JOptionPane.showOptionDialog(null, panel, "Add a Publisher",
            JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                options1, null);
   
        if (result == JOptionPane.YES_OPTION) {
          try{
                //Pairnw tis times twn textfields
                int pid = Integer.valueOf(PidtextField.getText());
                String name = NametextField.getText();
                String city = CitytextField.getText();
                //Kanw insert
                insertPublisher.setInt(1, pid);
                insertPublisher.setString(2, name);
                insertPublisher.setString(3, city);
                try{
                insertPublisher.executeUpdate();
                }catch(Exception ex){
                        if(!ex.getMessage().equals("A result was returned when none was expected.")){
                            throw new Exception(ex);
                        }
                }
                JPanel panel2 = new JPanel();
                panel2.setBackground(new java.awt.Color(255, 255, 203));
                panel2.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

                panel2.add(new JLabel("Submission Successful"));

                result2 = JOptionPane.showOptionDialog(null, panel2, "Add a Publisher",
                    JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                        options2, null);
                
                loadData(); //REFRESH
                }catch(Exception ex){
                    JOptionPane.showMessageDialog(null, ex.getMessage(),"Insert a Publisher Error",JOptionPane.INFORMATION_MESSAGE);
                    }
                    //ADEIAZW TA PEDIA
                    PidtextField.setText("");
                    NametextField.setText("");
                    CitytextField.setText("");
            }
        }//TELOS WHILE
    }//GEN-LAST:event_addActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        Object[] options1 = { "Submit", "Cancel" };
        Object[] options2 = { "Update", "Cancel" };
        Object[] options3 = { "New Update", "Cancel" }; 
        
        JPanel panel = new JPanel();
        panel.setBackground(new java.awt.Color(255, 255, 203));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        
        panel.add(new JLabel("Publisher Id:"));
        JTextField PidtextField = new JTextField(10);
        panel.add(PidtextField);
        
        int result=JOptionPane.YES_OPTION;
        int result2=JOptionPane.YES_OPTION;
        int result3=JOptionPane.YES_OPTION;
        
        
        while(result3 == JOptionPane.YES_OPTION && result2 == JOptionPane.YES_OPTION && result == JOptionPane.YES_OPTION){   //AN PATISW NEW SUBMIT NA KANEI EPANALIPSI
                result = JOptionPane.showOptionDialog(null, panel, "Update a Publisher",
                      JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                         options1, null);

              try{

                  if (result == JOptionPane.YES_OPTION) {
                      //Pairnw tin timh
                      int pid = Integer.valueOf(PidtextField.getText());
                      updatePublisher.setInt(3, pid);

                  JPanel panel2 = new JPanel();
                  panel2.setBackground(new java.awt.Color(255, 255, 203));
                  panel2.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

                   //1o textfield    
                   panel2.add(new JLabel("Name:"));
                   JTextField NametextField2 = new JTextField(10);
                   panel2.add(NametextField2);

                   //2o textfield
                   panel2.add(new JLabel("City:"));
                   JTextField CitytextField2 = new JTextField(10);
                   panel2.add(CitytextField2);

                    result2 = JOptionPane.showOptionDialog(null, panel2, "Update Member",
                   JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                   options2, null);

                   if(result2 == JOptionPane.YES_OPTION){
                      try{
                          //Apothikevw tis arxikes times tou member pou thelw na kanw update
                          String selectString2 ="select * from getpublisherpid(?)";//SELECT * FROM publisher where pid= ?
                          preSelect =  dbConnection.prepareStatement(selectString2); 
                          preSelect.setInt(1, pid);
                          rs2 = preSelect.executeQuery();

                          while(rs2.next()){

                          String name0 = rs2.getString("p_name");
                          String city0 = rs2.getString("p_city");

                          //Pairnw tis kainouries times
                          String name = NametextField2.getText();
                          if(name.equals(""))
                              name = name0;

                          String city = CitytextField2.getText();
                          if(city.equals(""))
                              city = city0;

                          //Kanw update
                          updatePublisher.setString(1,name);
                          updatePublisher.setString(2, city);
                          //try{
                          //updatePublisher.executeUpdate();
                          //}catch(Exception ex){
                            //if(!ex.getMessage().equals("A result was returned when none was expected."));
                          //}
                          }
                         boolean did = updatePublisher.execute(); //kanw update kai tautoxrona pairnw ton arithmo twn updates pou ginane
                          JPanel panel3 = new JPanel();
                          panel3.setBackground(new java.awt.Color(255, 255, 203));
                          panel3.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

                          if(!did)
                              panel3.add(new JLabel("Publisher not Found"));
 
                          else 
                              panel3.add(new JLabel("Updated Successfully"));
 
                          result3 = JOptionPane.showOptionDialog(null, panel3, "Update a Publisher",
                              JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                                  options3, null);
                          loadData(); //REFRESH
                          }catch(Exception ex){
                              JOptionPane.showMessageDialog(null, "Publisher not Found","Update a Publisher Error",JOptionPane.INFORMATION_MESSAGE);
                                              }
                          //ADEIAZW TA PEDIA
                          PidtextField.setText("");
                          NametextField2.setText("");
                          CitytextField2.setText("");

                        }
                    }
              }catch(Exception ex){
                              JOptionPane.showMessageDialog(null, ex.getMessage(),"Update a Publisher Error",JOptionPane.INFORMATION_MESSAGE);
                                              }
        
        
        }//TELOS WHILE
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        Object[] options1 = { "Delete", "Cancel" };
        Object[] options2 = { "New Delete", "Cancel" };
        
        
        JPanel panel = new JPanel();
        panel.setBackground(new java.awt.Color(255, 255, 203));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        
        panel.add(new JLabel("Publisher Id:"));
        JTextField PidtextField = new JTextField(10);
        panel.add(PidtextField);
     
        int result2 = JOptionPane.YES_OPTION;
        int result = JOptionPane.YES_OPTION;
        
        while(result2 == JOptionPane.YES_OPTION && result == JOptionPane.YES_OPTION){   //AN PATISW NEW SUBMIT NA KANEI EPANALIPSI
          result = JOptionPane.showOptionDialog(null, panel, "Delete a Publisher",
            JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
            options1, null);
   
        if (result == JOptionPane.YES_OPTION) {
          try{
            //Pairnw thn timh
            int pid = Integer.valueOf(PidtextField.getText());
            //Kanw delete
            deletePublisher.setInt(1, pid);
            //try{
            ResultSet rsr=null;
            rsr=deletePublisher.executeQuery();
            //}catch(Exception ex){
              //          if(!ex.getMessage().equals("A result was returned when none was expected."));
            //}
            int exists=0;
            while(rsr.next()){
                exists = rsr.getInt("deletepublish");
                System.out.println(exists);
            }
            JPanel panel2 = new JPanel();
            panel2.setBackground(new java.awt.Color(255, 255, 203));
            panel2.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

                if(exists == 0) 
                    panel2.add(new JLabel("Publisher not Found"));
                    
                else
                    panel2.add(new JLabel("Deleted Successfully"));
                 
                result2 = JOptionPane.showOptionDialog(null, panel2, "Delete a Publisher",
                    JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null,
                        options2, null);
            loadData(); //REFRESH
            }catch(Exception ex){
               JOptionPane.showMessageDialog(null, ex.getMessage(),"Delete a Publisher Error",JOptionPane.INFORMATION_MESSAGE); 
                }
                //ADEIAZW TA PEDIA
                PidtextField.setText("");
                
            }   
        }//TELOS WHILE
    }//GEN-LAST:event_deleteActionPerformed

    private boolean clicked = true; //gia query 1  
    private boolean clicked2 = true;  //gia query 2  
    private void cboptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboptionActionPerformed
        if(String.valueOf(cboption.getSelectedItem()) == "Query 1"){
            query1.setVisible(true);
            query2.setVisible(false);
            citycb.setVisible(false);
            jScrollPane3.setVisible(false);
            clicked = true;}
        else if(cboption.getSelectedItem() == "Query 2"){
            query2.setVisible(true);
            query1.setVisible(false);
            bookcb.setVisible(false);
            jScrollPane2.setVisible(false);
            clicked2 = true;
        }
        else{
            query1.setVisible(false);
            query2.setVisible(false);
            bookcb.setVisible(false);
            citycb.setVisible(false);
            jScrollPane2.setVisible(false);
            jScrollPane3.setVisible(false);
        }
    }//GEN-LAST:event_cboptionActionPerformed

    private void query1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_query1ActionPerformed
        if(clicked)
        bookcb.setVisible(true);

        else{
            bookcb.setVisible(false);
            jScrollPane2.setVisible(false);
        }
        clicked = !clicked;
    }//GEN-LAST:event_query1ActionPerformed

    static PreparedStatement selectPublishers = null;
    static ResultSet rs3 = null;
    private void bookcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookcbActionPerformed
        DefaultTableModel model = (DefaultTableModel) result1Table.getModel();
        model.setRowCount(0);

        String selectedBook = String.valueOf(bookcb.getSelectedItem());

        if(selectedBook.equals("Επίλεξε ένα βιβλίο"))
        jScrollPane2.setVisible(false);
        else{
            try {
                selectPublishers.setString(1, selectedBook);
                rs3 = selectPublishers.executeQuery();

                while(rs3.next()) {
                    String name = rs3.getString("getpname");
                    Object[] row = { name};
                    model.addRow(row);
                }
                if(model.getRowCount() !=0){
                    jScrollPane2.setVisible(true);
                }

                else if (model.getRowCount() == 0 && rs.isBeforeFirst()) {
                    JOptionPane.showMessageDialog(null, "no data","Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);
                    System.out.println("no data");
                }
            } catch(SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),"Query 1 Error",JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_bookcbActionPerformed

    private void query2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_query2ActionPerformed
        if(clicked2)
        citycb.setVisible(true);

        else{
            citycb.setVisible(false);
            jScrollPane3.setVisible(false);
        }
        clicked2 = !clicked2;
    }//GEN-LAST:event_query2ActionPerformed

    static PreparedStatement selectPublishers2 = null;
    static ResultSet rs4 = null;
    private void citycbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_citycbActionPerformed
        DefaultTableModel model2 = (DefaultTableModel) result2Table.getModel();
        model2.setRowCount(0);

        String selectedCity = String.valueOf(citycb.getSelectedItem());

        if(selectedCity.equals("Επίλεξε μία πόλη"))
        jScrollPane3.setVisible(false);
        else{
            try {
                selectPublishers2.setString(1, selectedCity);
                rs4 = selectPublishers2.executeQuery();

                while(rs4.next()) {
                    String name = rs4.getString("getpnamecity");
                    Object[] row = { name};
                    model2.addRow(row);
                }
                if(model2.getRowCount() !=0){
                    jScrollPane3.setVisible(true);
                }

                else if (model2.getRowCount() == 0 && rs.isBeforeFirst()) {
                    JOptionPane.showMessageDialog(null, "no data","Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);
                    System.out.println("no data");
                }
            } catch(SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(),"Query 2 Error",JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_citycbActionPerformed

    private void logFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logFileActionPerformed
        jScrollPane4.setVisible(true);
        jButton1.setVisible(true);

    }//GEN-LAST:event_logFileActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jScrollPane4.setVisible(false);
        jButton1.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    public static Connection dbConnection = null;
    static Statement statement = null;
    static PreparedStatement preSelect = null;
    static ResultSet rs = null;
    static ResultSet rs2 = null;
    static PreparedStatement insertPublisher = null;
    static PreparedStatement deletePublisher = null;
    static PreparedStatement updatePublisher= null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JComboBox<String> bookcb;
    private javax.swing.JComboBox<String> cboption;
    private javax.swing.JComboBox<String> citycb;
    private javax.swing.JButton delete;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton logFile;
    private javax.swing.JButton query1;
    private javax.swing.JButton query2;
    private javax.swing.JTable result1Table;
    private javax.swing.JTable result2Table;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    static Statement statement2 = null; //gia to gemisma tou pinaka log file
    static ResultSet rs5 = null;    
    private void loadData() {
        try{
            query1.setVisible(false);
            query2.setVisible(false);
            bookcb.setVisible(false);
            citycb.setVisible(false);
            jScrollPane2.setVisible(false);
            jScrollPane3.setVisible(false);
            jScrollPane4.setVisible(false);
            jButton1.setVisible(false);
            
            
            //anoigw tin sindesi
            //dbConnection = DriverManager.getConnection (Dashboard.url,Dashboard.username,Dashboard.passwd);
            
            //Insert Publisher
            String insertString = "select insertpublish(?,?,?)";//insert into publisher(pid,name,city) values (?,?,?)
            insertPublisher = dbConnection.prepareStatement(insertString);
            
            //Update Publisher
            String updateString = "select updatepublish(?,?,?)";//update publisher set name= ? , city= ? where pid= ?
            updatePublisher = dbConnection.prepareStatement(updateString);
            
            //Delete publisher
            String deleteString = "select deletepublish(?)";//delete from publisher where pid = ?
            deletePublisher = dbConnection.prepareStatement(deleteString);
            
            //Query 1
            String query1 = "select getpname(?)";//select p.name from publisher p, books b where p.pid = b.pid and b.title = ?;
            selectPublishers = dbConnection.prepareStatement(query1);
            
            //Query 2
            String query2 = "select getpnamecity(?)";//select p.name from publisher p where p.city = ?
            selectPublishers2 = dbConnection.prepareStatement(query2);
            
            //Gemisw ton pinaka
            statement =  dbConnection.createStatement();
            String selectString ="select * from getpublish()";//SELECT * FROM publisher
            rs = statement.executeQuery(selectString);
            DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
            model1.setRowCount(0);
            
            while(rs.next()){
                int publisherId = rs.getInt("p_pid");
                String name = rs.getString("p_name");
                String city = rs.getString("p_city");
                Object[] row = {publisherId,name,city};
                model1.addRow(row);
            }
            
            String selectCount = "select getcountpublish()";//Select COUNT(*) from publisher
            rs = statement.executeQuery(selectCount);
            while(rs.next()){
                int count = rs.getInt("getcountpublish");
                jLabel2.setText("Number of Publishers: "+count);
            }
            statement.close();
             //Gemisw to log file
            try{
                statement2 = dbConnection.createStatement();
               String selectString2 = "select * from getpublisherlog()";//SELECT * from publisher_log
               rs5 = statement2.executeQuery(selectString2);
               DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
               model2.setRowCount(0);

               while(rs5.next()){
                   String operation = rs5.getString("p_operation");
                   Timestamp stamp = rs5.getTimestamp("p_stamp");
                   String userid = rs5.getString("p_userid");
                   int pid = rs5.getInt("p_pid");
                   String name = rs5.getString("p_name");
                   String city = rs5.getString("p_city");
                    Object[] row = {operation,stamp,userid,pid,name,city};
                   model2.addRow(row);
               }
               statement2.close();
           }catch(SQLException ex){
               JOptionPane.showMessageDialog(null, ex.getMessage(),"LOG FILE LOAD DATA",JOptionPane.INFORMATION_MESSAGE);
           }
            
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage(),"LoansFrame",JOptionPane.INFORMATION_MESSAGE);
        }
    }

    
    static Statement myList = null;
    static Statement myList2 = null;
    String bkTitle[] = new String[20]; 
    String cityArray[] = new String[20];
    private void mylist() {
        cboption.addItem("Select a Query");
        cboption.addItem("Query 1");
        cboption.addItem("Query 2");
        
        int i=0;
        int z=0;
        String bookTitle = "select gettitles()";//select title from books
        String city = "select getcitypublish()";//select distinct city from publisher
        
        try{
            myList = dbConnection.createStatement();
            myList2 = dbConnection.createStatement();
            
            rs = myList.executeQuery(bookTitle);
            rs2 = myList2.executeQuery(city);
            
             while(rs.next()){
                bkTitle[i] = rs.getString("gettitles");
                i++;
            }
             while(rs2.next()){
                cityArray[z] = rs2.getString("getcitypublish");
                z++;
            }
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage(),"myList Error",JOptionPane.INFORMATION_MESSAGE); 
        }
        bookcb.addItem("Επίλεξε ένα βιβλίο");
        citycb.addItem("Επίλεξε μία πόλη");
        for(int y=0; y<=i-1;y++)
            bookcb.addItem(bkTitle[y]);
        for(int w=0; w<=z-1;w++)
            citycb.addItem(cityArray[w]);
    }
    static boolean flag = true; //gia to log file table
    static Statement statement3 = null; //gia to call ths function createlog    
     static void createLog() {
        //me to pou trexw to programma arxikopoieitai o pinakas log kai meta pou allazei to flag, ama allaksw tab kai epistrepsw sto loans frame, 
        //tote o pinakas den tha ksana arxikopoieithei kai tha diatirisei to periexomeno pou eixe 
         if(flag == true){
            //execute thn sql function create_writer_log()
            try{
                //anoigw tin sindesi
                dbConnection = DriverManager.getConnection (Dashboard.url,Dashboard.username,Dashboard.passwd);

                statement3 = dbConnection.createStatement();
                statement3.executeQuery("SELECT create_publisher_log()");
                statement3.close();
            }catch(SQLException ex){
                JOptionPane.showMessageDialog(null, ex.getMessage(),"LOG FILE LOAD DATA",JOptionPane.INFORMATION_MESSAGE);
            }
            flag = !flag;
         }
    }
}
